{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-03-23T00:56:27.709665+00:00",
  "repo": "tsvwg/udp-ecn",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOMpG-ts6Ua5aK",
      "title": "Cross-check with quinn-udp implementation",
      "url": "https://github.com/tsvwg/udp-ecn/issues/1",
      "state": "CLOSED",
      "author": "mxinden",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Thank you @martinduke for the document.\r\n\r\nFor what it is worth, I cross-checked the information in this document with the implementation in [`quinn-udp`](https://github.com/quinn-rs/quinn/tree/main/quinn-udp). I didn't find any discrepancies.\r\n\r\nNote that `quinn-udp` does implement some APIs missing in the document, e.g. [Windows](https://github.com/quinn-rs/quinn/blob/bb02a12a8435a7732a1d762783eeacbb7e50418e/quinn-udp/src/windows.rs#L180-L189) and [Apple](https://github.com/quinn-rs/quinn/blob/bb02a12a8435a7732a1d762783eeacbb7e50418e/quinn-udp/src/unix.rs#L562-L571) per-packet ECN marks.\r\n\r\n#### Context\r\n\r\nI am working with Mozilla, replacing their current QUIC UDP IO path away from [NSPR](https://github.com/nss-dev/nspr), to a modern Rust implementation. See [project tracking issue](https://bugzilla.mozilla.org/show_bug.cgi?id=1901292).\r\n\r\nInternally we are using [`quinn-udp`](https://github.com/quinn-rs/quinn/tree/main/quinn-udp) from the [`quinn`](https://github.com/quinn-rs/quinn/) project.\r\n\r\n//CC `quinn` maintainers @djc and @Ralith",
      "createdAt": "2024-08-25T07:56:31Z",
      "updatedAt": "2024-08-28T17:26:15Z",
      "closedAt": "2024-08-28T17:26:15Z",
      "comments": []
    },
    {
      "number": 4,
      "id": "I_kwDOMpG-ts6Uk5NO",
      "title": "Include `sendmmsg` and `recvmmsg` on Linux?",
      "url": "https://github.com/tsvwg/udp-ecn/issues/4",
      "state": "CLOSED",
      "author": "mxinden",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "On Linux, one can send and receive ECN marked datagrams using `sendmmsg` and `recvmmsg` (note the two `m`s).\r\n\r\nSee for example:\r\n\r\nhttps://github.com/quinn-rs/quinn/blob/bb02a12a8435a7732a1d762783eeacbb7e50418e/quinn-udp/src/unix.rs#L469-L470\r\n\r\nShould this be included in the draft? If yes, I can prepare a PR.",
      "createdAt": "2024-08-28T18:04:29Z",
      "updatedAt": "2024-10-07T20:05:30Z",
      "closedAt": "2024-10-07T20:05:30Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "I think that adds clarity, so sure.",
          "createdAt": "2024-08-28T18:23:30Z",
          "updatedAt": "2024-08-28T18:23:30Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOMpG-ts6bTqoI",
      "title": "\"Limited\" application to UDP",
      "url": "https://github.com/tsvwg/udp-ecn/issues/6",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The abstract uses that word.\r\n\r\nMagnus points out that it's not limited application, but limited deployment. RTP is big-ish; it's just that ECN didn't catch fire.",
      "createdAt": "2024-10-22T14:26:44Z",
      "updatedAt": "2024-11-11T22:47:27Z",
      "closedAt": "2024-11-11T22:47:27Z",
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOMpG-ts6bT2OF",
      "title": "Clarify security considerations",
      "url": "https://github.com/tsvwg/udp-ecn/issues/7",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Say what I mean by this draft mitigating fingerprinting.\r\n\r\nIf ECN is widely deployed in clients, it makes it harder to identify what client is operating. This draft would ideally make ECN more widespread.",
      "createdAt": "2024-10-22T14:43:33Z",
      "updatedAt": "2024-11-11T22:47:45Z",
      "closedAt": "2024-11-11T22:47:45Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Furthermore, if clients only get some platforms to work, it identifies the OS",
          "createdAt": "2024-10-22T14:45:24Z",
          "updatedAt": "2024-10-22T14:45:24Z"
        }
      ]
    },
    {
      "number": 9,
      "id": "I_kwDOMpG-ts6dHa8_",
      "title": "Talk about cmsg for IPv4 packets on dual-stack sockets",
      "url": "https://github.com/tsvwg/udp-ecn/issues/9",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "On recvmsg(), Linux reports IP_TOS. Apple reports IPV6_TCLASS.\r\n\r\nsendmsg() is probably the same.",
      "createdAt": "2024-11-05T16:44:23Z",
      "updatedAt": "2025-01-09T21:23:59Z",
      "closedAt": "2025-01-09T21:23:59Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "What is it for Windows?",
          "createdAt": "2024-11-11T22:05:06Z",
          "updatedAt": "2024-11-11T22:05:06Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Question for @guhetier",
          "createdAt": "2024-12-23T21:38:59Z",
          "updatedAt": "2024-12-23T21:38:59Z"
        },
        {
          "author": "guhetier",
          "authorAssociation": "COLLABORATOR",
          "body": "On Windows, for datagrams received on IPv4 received on a dual stack socket, you should get IP_PROTO_IP + IP_ECN.\r\n(and for datagrams received on IPv6, you get IP_PROTO_IPV6 + IPV6_ECN).\r\n\r\nBut I want to confirm that's the behavior even when the socket is configured with both IP_RECVECN and IPV6_RECVECN, the example I have in mind set only one or the other.",
          "createdAt": "2024-12-24T18:56:02Z",
          "updatedAt": "2024-12-24T18:56:02Z"
        },
        {
          "author": "guhetier",
          "authorAssociation": "COLLABORATOR",
          "body": "I checked, and I confirm what I said earlier.\r\nFor a dual-stack socket on Windows:\r\n- If IPPROTO_IP / IP_RECVECN is set, when a IPv4 packet is received, a cmsg with level IPPROTO_IP and type IP_ECN is reported.\r\n- If IPPROTO_IPV6 / IPV6_RECVECN is set, when a IPv6 packet is received, a cmsg with level IPPROTO_IPV6 and type IPV6_ECN is reported\r\n- If either one is not set, no cmsg is reported for the packet of the corresponding IP type\r\n\r\nTo get the ECN flag for all packets received on a dual stack socket, one should set both options and check for cmsg of both types. \r\n\r\n",
          "createdAt": "2025-01-04T00:47:38Z",
          "updatedAt": "2025-01-04T00:47:38Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Weirdly, this what's already in the draft, so I'm not sure why I filed the issue. Nevertheless, thanks for confirming.",
          "createdAt": "2025-01-09T21:23:59Z",
          "updatedAt": "2025-01-09T21:23:59Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOMpG-ts6dkMRQ",
      "title": "document 1 byte vs 4 byte cmsg values",
      "url": "https://github.com/tsvwg/udp-ecn/issues/10",
      "state": "OPEN",
      "author": "marten-seemann",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Some platforms require a uint32, some require a uint8. It also depends on the kernel version. Happy to provide some more details on what I did in quic-go, if there is interest in expanding this document.",
      "createdAt": "2024-11-08T09:53:37Z",
      "updatedAt": "2025-03-13T20:39:06Z",
      "closedAt": null,
      "comments": [
        {
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "body": "Linux, at least in newer versions, uses a 1-byte value. At some point, we were so fed up with ECN-related bug reports that we disabled ECN in all versions before 5: https://github.com/quic-go/quic-go/pull/4456. Sorry that I can't provide any more details about this, I didn't find this change documented anywhere. But I'd assume that someone more familiar with reading kernel code wouldn't struggle to bisect when exactly this change was introduced.\n\nOn FreeBSD, the value also seems to have length of 1.\nmacOS on the other hand seems to use a 4-byte integer.\n\n",
          "createdAt": "2025-01-23T12:31:20Z",
          "updatedAt": "2025-01-23T12:31:20Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks for the reply.\n\nAre you sure Linux is 1B? https://elixir.bootlin.com/linux/v3.10.77/source/net/ipv4/ip_sockglue.c#L1300 seems to indicate 4B, but it's very possible I've read this wrong.\n\nI also find it surprising that MacOS would be different from BSD, as one is derived from the other and this is a weird thing to change on purpose.\n\nAlso, in host order it doesn't really matter; TOS is one byte, which will be in the first byte even if it's a 4B int, so if the code assumes it's 1B (or even assumes it's 4B and applies the 0x3 bitmask) it doesn't matter.\n\nBased on this reasoning, the fact we're not sure, I don't think it matters much to implementers, and I'm inclined to just not discuss this in the draft at all.",
          "createdAt": "2025-01-23T23:25:25Z",
          "updatedAt": "2025-01-23T23:25:25Z"
        },
        {
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "body": "Isn't it doing an implicit type conversion there? https://elixir.bootlin.com/linux/v3.10.77/source/include/net/inet_sock.h#L172\n\n> I also find it surprising that MacOS would be different from BSD, as one is derived from the other and this is a weird thing to change on purpose.\n\nIndeed, would probably make sense to double-check this, but we made this change based on an issue reported by a FreeBSD user: https://github.com/quic-go/quic-go/issues/4106.\n\n> Also, in host order it doesn't really matter; TOS is one byte, which will be in the first byte even if it's a 4B int, so if the code assumes it's 1B (or even assumes it's 4B and applies the 0x3 bitmask) it doesn't matter.\n\nYes, that fact has been very unhelpful in debugging this issue. You're totally right that *if* this is the only cmsg you're using, the kernel just seems to ignore the additional 3 bytes. However, once you add another cmsg, it suddenly does matter, and you'll get some nasty `sendmsg: invalid argument` errors.\n\n> Based on this reasoning, the fact we're not sure, I don't think it matters much to implementers, and I'm inclined to just not discuss this in the draft at all.\n\nFor me, getting the cmsg size right turned out to be the most painful part, and was the reason for more than one patch release...",
          "createdAt": "2025-01-24T06:45:09Z",
          "updatedAt": "2025-01-24T06:45:09Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "> Yes, that fact has been very unhelpful in debugging this issue. You're totally right that if this is the only cmsg you're using, the kernel just seems to ignore the additional 3 bytes. However, once you add another cmsg, it suddenly does matter, and you'll get some nasty sendmsg: invalid argument errors.\n\nWas there a reason you didn't just use CMSG_NXT?",
          "createdAt": "2025-02-06T19:30:46Z",
          "updatedAt": "2025-02-06T19:30:46Z"
        },
        {
          "author": "marten-seemann",
          "authorAssociation": "NONE",
          "body": "Not sure what that is (Google returns 0 results).",
          "createdAt": "2025-02-06T22:23:23Z",
          "updatedAt": "2025-02-06T22:23:23Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Sorry, CMSG_NXTHDR.",
          "createdAt": "2025-03-13T20:39:05Z",
          "updatedAt": "2025-03-13T20:39:05Z"
        }
      ]
    },
    {
      "number": 11,
      "id": "I_kwDOMpG-ts6d-4Ka",
      "title": "Windows sockopt for sending ECN",
      "url": "https://github.com/tsvwg/udp-ecn/issues/11",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is not described in the text.",
      "createdAt": "2024-11-11T22:06:24Z",
      "updatedAt": "2024-12-23T22:09:25Z",
      "closedAt": "2024-12-23T22:09:24Z",
      "comments": [
        {
          "author": "guhetier",
          "authorAssociation": "COLLABORATOR",
          "body": "Hi,\r\n\r\nWindows doesn't have a sockopt for sending ECN on UDP at this time.\r\nECN can only be set on a per-packet basis using a cmsg (as already described in the document).\r\n\r\nI created #17 to add clarify it + add a link to the IP_RECVECN online documentation.",
          "createdAt": "2024-12-20T18:38:24Z",
          "updatedAt": "2024-12-20T18:38:24Z"
        },
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed by #17",
          "createdAt": "2024-12-23T22:09:24Z",
          "updatedAt": "2024-12-23T22:09:24Z"
        }
      ]
    },
    {
      "number": 13,
      "id": "I_kwDOMpG-ts6fJS-p",
      "title": "Network Framework",
      "url": "https://github.com/tsvwg/udp-ecn/issues/13",
      "state": "OPEN",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "At IETF 121, Stewart said he would like to include Network Framework in the document. If someone from Apple provides text, this is the issue for it.",
      "createdAt": "2024-11-18T21:40:07Z",
      "updatedAt": "2024-11-18T21:40:07Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 14,
      "id": "I_kwDOMpG-ts6j_b2T",
      "title": "Clarify Apple dual-stack behavior",
      "url": "https://github.com/tsvwg/udp-ecn/issues/14",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From an [email](https://mailarchive.ietf.org/arch/msg/tsvwg/fXLn9OuKYWznQNroBX6MEMpX8H4) by Max Franke:\r\n\r\n\r\n\r\n3.1 currently says:\r\n\r\n> For dual-stack sockets, on Linux hosts the application sets both the IPV6_RECVTCLASS and IP_RECVTOS options to receive ECN markings on all incoming packets. On Apple and FreeBSD hosts, the application only sets the IPPROTO_IPV6-level socket option with name IPV6_RECVTCLASS; setting an IPPROTO_IP-level socket option on an IPv6 socket results in an error.\r\n\r\nMake it clear that the Apple behavior is to receive marks on all incoming packets, not just v6.\r\n",
      "createdAt": "2024-12-19T20:09:01Z",
      "updatedAt": "2024-12-23T21:41:44Z",
      "closedAt": "2024-12-23T21:41:43Z",
      "comments": []
    },
    {
      "number": 15,
      "id": "I_kwDOMpG-ts6j_ejf",
      "title": "Terminology",
      "url": "https://github.com/tsvwg/udp-ecn/issues/15",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "From this [thread ](https://mailarchive.ietf.org/arch/msg/tsvwg/EDoWsI92tTLYjoFJ7ihI40Yt_FA/)\r\n\r\n\"ECN Mark\" => \"ECN Codepoint\" or \"CE mark\", depending on context\r\n\r\n\"TOS byte\" => \"legacy TOS byte\"",
      "createdAt": "2024-12-19T20:14:03Z",
      "updatedAt": "2024-12-23T21:41:44Z",
      "closedAt": "2024-12-23T21:41:44Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "From Greg White:\r\n\r\n> On terminology, I noticed the statement in Section 3: \u201cNetwork devices can change the ECN bits in the IP header.\u201d\r\n> \r\n> This should be \u201cNetwork devices can change the ECN codepoint in the IP header.\u201d and it would be worth pointing to RFC3168 and RFC9331 regarding the allowed transitions that are expected to occur.\r\n> \r\n> I\u2019ve noticed that even some current vendor documentation refers to the obsolete RFC2481 definition of the \u201cECT bit\u201d and the \u201cCE bit\u201d as opposed to the \u201cECN Field\u201d and its codepoints.",
          "createdAt": "2024-12-19T20:18:05Z",
          "updatedAt": "2024-12-19T20:18:15Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOMpG-ts6lpTgs",
      "title": "Verify sendmsg behavior",
      "url": "https://github.com/tsvwg/udp-ecn/issues/18",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Section 4.1.1\r\n\r\nFor dual-stack sockets, we hypothesize that Linux sockets will require an additional setsockopt() call with IP_TOS. Apple sockets will not and will return an error if this call is made. Our experiments did not test this hypothesis.\r\n\r\n",
      "createdAt": "2025-01-10T01:23:46Z",
      "updatedAt": "2025-03-13T15:36:53Z",
      "closedAt": "2025-03-13T15:36:53Z",
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Confirmed for linux",
          "createdAt": "2025-01-10T14:58:03Z",
          "updatedAt": "2025-01-10T14:58:03Z"
        }
      ]
    },
    {
      "number": 20,
      "id": "I_kwDOMpG-ts6t5wu4",
      "title": "References to ToS byte",
      "url": "https://github.com/tsvwg/udp-ecn/issues/20",
      "state": "CLOSED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Gorry's email:\n\ndraft-ietf-tsvwg-udp-ecn talks about the ToS bytem, because stack document still does.\n\nhowever, it's sad that the \"ToS-Byte\" of the 1980's still exists in stack code, even though the ToS field and former IPP fields have been deprecated. If and when the IETF decides to publish this I-D, I think it would be really nice to try to say this and explain that this byte is now the 6-bit Diffserv field and the 2-bit ECN field. RFC2474 contains this redefintion (and RFC 9435 describes some of the issues that arise when people think this is one field).",
      "createdAt": "2025-03-13T15:37:49Z",
      "updatedAt": "2025-03-14T16:24:51Z",
      "closedAt": "2025-03-14T16:24:51Z",
      "comments": []
    },
    {
      "number": 22,
      "id": "I_kwDOMpG-ts6uRzH4",
      "title": "Any desire to talk about things like the Java VM?",
      "url": "https://github.com/tsvwg/udp-ecn/issues/22",
      "state": "OPEN",
      "author": "JonathanLennox",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Is there any desire to talk about higher-level API abstractions like the Java VM?\n\nWith Java, I believe you you can set ECN on a per-socket basis with the setsockopt methods corresponding to the platform you're on, but as far as I can tell there's no way to receive them.\n\n(I have a bug report filed with OpenJDK about this but as far as I can tell there's been no progress on it.  Partially this issue here is just because I'm grumpy about that fact.)",
      "createdAt": "2025-03-17T06:26:57Z",
      "updatedAt": "2025-03-17T06:26:57Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 23,
      "id": "I_kwDOMpG-ts6uR1uf",
      "title": "Windows added RECVECN support fairly recently",
      "url": "https://github.com/tsvwg/udp-ecn/issues/23",
      "state": "OPEN",
      "author": "JonathanLennox",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "It's a bit hard to find, but the Microsoft documentation for WSASetRecvIPEcn at https://learn.microsoft.com/en-us/windows/win32/api/ws2tcpip/nf-ws2tcpip-wsasetrecvipecn says it's supported since Windows 10 Build 20348, which I believe is when the corresponding socket options were added too, so it might be worth noting that.  \n\n\n",
      "createdAt": "2025-03-17T06:32:27Z",
      "updatedAt": "2025-03-17T06:32:27Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 2,
      "id": "PR_kwDOMpG-ts55neYx",
      "title": "socket options use names, not types",
      "url": "https://github.com/tsvwg/udp-ecn/pull/2",
      "state": "CLOSED",
      "author": "tuexen",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "while there, fix also a typo.",
      "createdAt": "2024-08-27T19:36:20Z",
      "updatedAt": "2024-08-27T20:56:56Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "e918dbbc2cd7c6ea1f3613dbe3be15b97c7dda61",
      "headRepository": "tuexen/udp-ecn",
      "headRefName": "editorial-fixes",
      "headRefOid": "6e6a8ad6ceb3a921cf66a78189e1e8aa34bea5a5",
      "closedAt": "2024-08-27T19:42:04Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "I'm a bit confused because your PR seems to be changing \"name\" to \"type\", which is not your title.\r\n\r\nIn any case, the relevant variable in the struct is cmsg_type, so that seems more transparent. I prefer \"type\", so I'll commit this.",
          "createdAt": "2024-08-27T20:56:55Z",
          "updatedAt": "2024-08-27T20:56:55Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 3,
      "id": "PR_kwDOMpG-ts55oh5X",
      "title": "mxinden results",
      "url": "https://github.com/tsvwg/udp-ecn/pull/3",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #1",
      "createdAt": "2024-08-27T23:12:13Z",
      "updatedAt": "2024-08-28T17:26:14Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "e918dbbc2cd7c6ea1f3613dbe3be15b97c7dda61",
      "headRepository": "tsvwg/udp-ecn",
      "headRefName": "mxinden",
      "headRefOid": "8740935428c54aef7742abd86badf66e26b71820",
      "closedAt": "2024-08-28T17:26:14Z",
      "mergedAt": "2024-08-28T17:26:14Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "71bf2390bfac6986d4ccca4b3ac2df789816755d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMpG-ts6HHXkn",
          "commit": {
            "abbreviatedOid": "8740935"
          },
          "author": "mxinden",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thank you Martin!",
          "createdAt": "2024-08-28T17:16:36Z",
          "updatedAt": "2024-08-28T17:16:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOMpG-ts55yfg-",
      "title": "Mention Linux-specific sendmmsg and recvmmsg",
      "url": "https://github.com/tsvwg/udp-ecn/pull/5",
      "state": "MERGED",
      "author": "mxinden",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #4.",
      "createdAt": "2024-08-29T07:04:27Z",
      "updatedAt": "2024-10-07T20:05:29Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "71bf2390bfac6986d4ccca4b3ac2df789816755d",
      "headRepository": "mxinden/udp-ecn",
      "headRefName": "sendmmsg-recvmmsg",
      "headRefOid": "56dbf52dfe58c95665c74acfa237923ef5d9f9c0",
      "closedAt": "2024-10-07T20:05:29Z",
      "mergedAt": "2024-10-07T20:05:29Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "f72e6b03c0a54e181162cc31fd13214aa9bc0be5"
      },
      "comments": [
        {
          "author": "mxinden",
          "authorAssociation": "COLLABORATOR",
          "body": "Friendly ping @martinduke.",
          "createdAt": "2024-09-05T13:10:30Z",
          "updatedAt": "2024-09-05T13:10:30Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMpG-ts6MPWvY",
          "commit": {
            "abbreviatedOid": "56dbf52"
          },
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-07T20:05:24Z",
          "updatedAt": "2024-10-07T20:05:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 8,
      "id": "PR_kwDOMpG-ts6A8s3e",
      "title": "Add FreeBSD specific text and cleanups",
      "url": "https://github.com/tsvwg/udp-ecn/pull/8",
      "state": "MERGED",
      "author": "tuexen",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-11-05T15:47:03Z",
      "updatedAt": "2024-11-05T16:01:21Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "a7bafbe4d68eee0a4ff837b693c40fda51e96952",
      "headRepository": "tuexen/udp-ecn",
      "headRefName": "FreeBSD",
      "headRefOid": "7b6a45351ec4df05441b485b489e91a5c9d74e1f",
      "closedAt": "2024-11-05T16:01:21Z",
      "mergedAt": "2024-11-05T16:01:21Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "db1291a1076a71bfb7737f3a78e3f8c9bb3b0284"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMpG-ts6QAgzR",
          "commit": {
            "abbreviatedOid": "7b6a453"
          },
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-11-05T15:57:03Z",
          "updatedAt": "2024-11-05T15:57:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "PR_kwDOMpG-ts6BkFMx",
      "title": "Nits",
      "url": "https://github.com/tsvwg/udp-ecn/pull/12",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fix #6, #7",
      "createdAt": "2024-11-11T22:42:02Z",
      "updatedAt": "2024-11-11T22:47:27Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "db1291a1076a71bfb7737f3a78e3f8c9bb3b0284",
      "headRepository": "tsvwg/udp-ecn",
      "headRefName": "nits",
      "headRefOid": "2bf14f7dc7ddbd0d5eb1b0a02b9b94b8551c3604",
      "closedAt": "2024-11-11T22:47:26Z",
      "mergedAt": "2024-11-11T22:47:26Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "48cb2676e207164daab33c396c706f614aff2407"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 16,
      "id": "PR_kwDOMpG-ts6F2S7G",
      "title": "Editorial comments during adoption",
      "url": "https://github.com/tsvwg/udp-ecn/pull/16",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #14\r\nFixes #15 ",
      "createdAt": "2024-12-19T22:00:57Z",
      "updatedAt": "2024-12-23T21:41:43Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "2fe34e29ca89af05c562ca3626dfd0725935deec",
      "headRepository": "tsvwg/udp-ecn",
      "headRefName": "editorial",
      "headRefOid": "38f1d8c294f29c8768a01ef0812fff9df9012046",
      "closedAt": "2024-12-23T21:41:43Z",
      "mergedAt": "2024-12-23T21:41:43Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "7c1e093369acbc2dee79edcf77a4cdc0b686ad4b"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 17,
      "id": "PR_kwDOMpG-ts6F8UUn",
      "title": "Update Windows related details",
      "url": "https://github.com/tsvwg/udp-ecn/pull/17",
      "state": "MERGED",
      "author": "guhetier",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Fix a typo\r\n- Add link to MSDN documentation for the IP_RECVECN documentation.\r\n- Clarify that ECN cannot be sent on a per-socket basis on Windows currently, only per-packet.",
      "createdAt": "2024-12-20T18:37:05Z",
      "updatedAt": "2024-12-24T18:08:59Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "2fe34e29ca89af05c562ca3626dfd0725935deec",
      "headRepository": "guhetier/udp-ecn",
      "headRefName": "patch-1",
      "headRefOid": "89528057f0b29a97325d98970a04283fe0b67b97",
      "closedAt": "2024-12-23T21:40:07Z",
      "mergedAt": "2024-12-23T21:40:07Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "2f7b9808bce4ce55eb1b203f54907699de31c9be"
      },
      "comments": [
        {
          "author": "martinduke",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixes #11 ",
          "createdAt": "2024-12-23T21:35:10Z",
          "updatedAt": "2024-12-23T21:35:10Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOMpG-ts6WLYbI",
          "commit": {
            "abbreviatedOid": "a867430"
          },
          "author": "mxinden",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-12-22T07:42:29Z",
          "updatedAt": "2024-12-22T07:49:30Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nAt the time of this writing, Windows does not provide a way to configure a\r\n```",
              "createdAt": "2024-12-22T07:42:29Z",
              "updatedAt": "2024-12-22T07:49:30Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nAt the time of this writting, Windows does not provide a way to configure\r\n```\r\n\r\nNot a native speaker. Please feel free to ignore.",
              "createdAt": "2024-12-22T07:43:53Z",
              "updatedAt": "2024-12-22T07:49:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOMpG-ts6WMW2W",
          "commit": {
            "abbreviatedOid": "a867430"
          },
          "author": "guhetier",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-23T03:07:48Z",
          "updatedAt": "2024-12-23T03:07:48Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Not a native speaker easier :) I am on the fence about which version is the most correct, so I trust you on that one.",
              "createdAt": "2024-12-23T03:07:48Z",
              "updatedAt": "2024-12-23T03:07:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOMpG-ts6HW0kE",
      "title": "Confirm sendmsg behavior",
      "url": "https://github.com/tsvwg/udp-ecn/pull/19",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #18 ",
      "createdAt": "2025-01-10T16:49:46Z",
      "updatedAt": "2025-03-13T15:36:52Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "e22b858231edb64f7aa26e2abe9ba014af7dd8c9",
      "headRepository": "tsvwg/udp-ecn",
      "headRefName": "sendmsg",
      "headRefOid": "0f5850b45ea02948ba1fd8baf2bf902a7a369f50",
      "closedAt": "2025-03-13T15:36:52Z",
      "mergedAt": "2025-03-13T15:36:52Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "bb659feaec2a9508e535dc4d0893cac96b23deea"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 21,
      "id": "PR_kwDOMpG-ts6Ok5fv",
      "title": "Mention TOS is obsolete",
      "url": "https://github.com/tsvwg/udp-ecn/pull/21",
      "state": "MERGED",
      "author": "martinduke",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #20 ",
      "createdAt": "2025-03-13T21:03:27Z",
      "updatedAt": "2025-03-14T16:24:50Z",
      "baseRepository": "tsvwg/udp-ecn",
      "baseRefName": "main",
      "baseRefOid": "54faf5f465b677d3c983428c4882de5fc8a72b57",
      "headRepository": "tsvwg/udp-ecn",
      "headRefName": "tos-byte",
      "headRefOid": "69abbe93a4238ec780a2900c6f1b1e5092c89bb0",
      "closedAt": "2025-03-14T16:24:50Z",
      "mergedAt": "2025-03-14T16:24:50Z",
      "mergedBy": "martinduke",
      "mergeCommit": {
        "oid": "c4dd6bd95c60fafe3e4087c736b71a0be33c8906"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOMpG-ts6f90xp",
          "commit": {
            "abbreviatedOid": "69abbe9"
          },
          "author": "gorryfair",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2025-03-14T01:45:32Z",
          "updatedAt": "2025-03-14T01:45:32Z",
          "comments": []
        }
      ]
    }
  ]
}